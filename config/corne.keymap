/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_french.h"

/ {
    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  A  |  Z  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC  |  Q  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  W  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHIFT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
    &kp TAB     &kp FR_A    &kp FR_Z   &kp FR_E  &kp FR_R  &kp FR_T      &kp FR_Y  &kp FR_U  &kp FR_I     &kp FR_O    &kp FR_P     &kp BSPC
    &kp ESC     &kp FR_Q    &kp FR_S   &kp FR_D  &kp FR_F  &kp FR_G      &kp FR_H  &kp FR_J  &kp FR_K     &kp FR_L    &kp FR_SCLN  &kp FR_QUOT
    &kp LSHFT   &kp FR_W    &kp FR_X   &kp FR_C  &kp FR_V  &kp FR_B      &kp FR_N  &kp FR_M  &kp FR_COMM  &kp FR_DOT  &kp FR_SLSH  &kp RSHIFT
                                       &kp LCTRL &mo 1     &kp SPACE     &kp RET  &mo 2   &kp RALT
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
      &trans    &trans    &kp UP     &trans     &trans     &trans     &kp N7     &kp N8    &kp N9   &kp N0  &kp HOME   &kp F1
      &trans  &kp LEFT  &kp DOWN  &kp RIGHT     &trans     &trans     &kp N4     &kp N5    &kp N6   &trans    &trans  &kp F10

                                   &kp LGUI     &trans  &kp SPACE    &kp RET  &kp RCTRL  &kp RALT
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
    &trans      &kp EXCL      &kp AT    &kp HASH      &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp DEL
    &trans    &bt BT_CLR  &bt BT_PRV  &bt BT_NXT        &trans      &to 3    &kp UNDER  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
    &trans  &out OUT_TOG      &trans      &trans        &trans     &trans    &kp MINUS   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                        &kp LGUI  &kp LEFT_ALT  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };

        Game {
            label = "Game";
            bindings = <
    &trans  &trans  &trans  &trans        &trans  &trans    &trans         &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans        &trans   &sl 4    &trans         &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans        &trans  &trans    &trans         &trans  &trans  &trans  &trans   &to 0
                            &trans  &kp LEFT_ALT  &trans    &trans  &kp RIGHT_WIN  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
    &kt F5  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
    &to 3         &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans       &kp LA(F4)
    &kp F10         &none         &to 0         &none  &kp NUMBER_6  &kp NUMBER_7           &trans         &trans         &trans         &trans         &trans            &to 0
                                            &kp J         &kp I         &kp M           &trans         &trans         &trans
            >;
        };
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};